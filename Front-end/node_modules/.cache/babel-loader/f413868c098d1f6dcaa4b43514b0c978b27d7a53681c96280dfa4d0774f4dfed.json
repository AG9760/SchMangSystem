{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshi\\\\Desktop\\\\project\\\\Front-end\\\\my-app\\\\src\\\\components\\\\AllUsers\\\\AllUsers.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllUsers = () => {\n  _s();\n  const getUsers = async () => {\n    try {\n      return await axios.get(\"http://localhost:8080/AllUsers\");\n      // console.log('')\n    } catch (error) {\n      console.log(\"error while calling getusers API\", error);\n    }\n  };\n  // const getAllUsers = async () => {\n  //   let response = await getUsers();\n  //   console.log(response);\n  // };\n  useEffect(() => {\n    // let response = await getUsers();\n    //   console.log(response);\n    fetch(\"http://localhost:8080/AllUsers\").then(users => {\n      console.log(users);\n    });\n    // getAllUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AllUsers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AllUsers;\nexport default AllUsers;\nvar _c;\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["React","axios","useEffect","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","AllUsers","_s","getUsers","get","error","console","log","fetch","then","users","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anshi/Desktop/project/Front-end/my-app/src/components/AllUsers/AllUsers.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material\";\r\n\r\nconst AllUsers = () => {\r\n  const getUsers = async () => {\r\n    try {\r\n      return await axios.get(\"http://localhost:8080/AllUsers\");\r\n      // console.log('')\r\n    } catch (error) {\r\n      console.log(\"error while calling getusers API\", error);\r\n    }\r\n  };\r\n  // const getAllUsers = async () => {\r\n  //   let response = await getUsers();\r\n  //   console.log(response);\r\n  // };\r\n  useEffect(() => {\r\n    // let response = await getUsers();\r\n    //   console.log(response);\r\n    fetch(\"http://localhost:8080/AllUsers\").then((users) => {\r\n      console.log(users);\r\n    });\r\n    // getAllUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Id</TableCell>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Username</TableCell>\r\n          <TableCell>Email</TableCell>\r\n          <TableCell>Phone</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody></TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SACEC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAS,QACJ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,OAAO,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,KAAK,CAAC;IACxD;EACF,CAAC;EACD;EACA;EACA;EACA;EACAZ,SAAS,CAAC,MAAM;IACd;IACA;IACAe,KAAK,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,KAAK,IAAK;MACtDJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CAAC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACN,KAAK;IAAAiB,QAAA,gBACJX,OAAA,CAACL,SAAS;MAAAgB,QAAA,eACRX,OAAA,CAACJ,QAAQ;QAAAe,QAAA,gBACPX,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eACzBf,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eAC3Bf,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eAC/Bf,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eAC5Bf,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACZf,OAAA,CAACF,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEZ,CAAC;AAACb,EAAA,CApCID,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}